
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    [{"authors":null,"categories":null,"content":"I’m an assistant researcher at the Software Engineering Group (SEG) at Nanjing University. My research interests lie in software testing and program language, including static and dynamic analysis. Recently, I focus on improving the performance of program analysis by machine learning.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"I’m an assistant researcher at the Software Engineering Group (SEG) at Nanjing University. My research interests lie in software testing and program language, including static and dynamic analysis. Recently, I focus on improving the performance of program analysis by machine learning.","tags":null,"title":"Yu WANG","type":"authors"},{"authors":["Qian Chen","Chenyang Yu","Ruyan Liu","Chi Zhang","Yu Wang","Ke Wang","Ting Su","Linzhang Wang"],"categories":null,"content":"Add the full text or supplementary notes for the publication here using Markdown formatting.\n","date":1711929600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1711929600,"objectID":"7b4e752c3a4b4dc987c1f37669d725e9","permalink":"https://itwoi.github.io/publication/10-1145-3649829/","publishdate":"2024-04-30T15:33:01.754492Z","relpermalink":"/publication/10-1145-3649829/","section":"publication","summary":"in Proceedings of the ACM SIGPLAN Conference on Object-Oriented Programming Systems, Languages, and Applications 2024 (OOPSLA 24)","tags":["Alias Analysis","Deep Learning","Equivalence Checking"],"title":"Evaluating the Effectiveness of Deep Learning Models for Foundational Program Analysis Tasks","type":"publication"},{"authors":["Fengjuan Gao","Yu Wang","Ke Wang"],"categories":null,"content":"","date":1672531200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1672531200,"objectID":"79832b510e9fce0ca6aaa7dbab859122","permalink":"https://itwoi.github.io/publication/gao-2023-discrete/","publishdate":"2023-08-18T08:15:31.046427Z","relpermalink":"/publication/gao-2023-discrete/","section":"publication","summary":"in Proceedings of the ACM on Programming Languages 7, no. PLDI (2023)","tags":null,"title":"Discrete Adversarial Attack to Models of Code","type":"publication"},{"authors":["Yu Wang","Fengjuan Gao","Linzhang Wang","Tingting Yu","Jianhua Zhao","Xuandong Li"],"categories":[],"content":"","date":1640995200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1642149389,"objectID":"2468d5f82dd2a7b2c493d2d0140b0fe8","permalink":"https://itwoi.github.io/publication/9072666/","publishdate":"2022-01-14T08:36:29.524763Z","relpermalink":"/publication/9072666/","section":"publication","summary":"in Transactions on Software Engineering (TSE 22)","tags":[],"title":"Automatic Detection, Validation and Repair of Race Conditions in Interrupt-Driven Embedded Software","type":"publication"},{"authors":["Fengjuan Gao","Yu Wang","Lingyun Situ","Linzhang Wang"],"categories":[],"content":"","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1641869867,"objectID":"3c0b4a3ef2486d847243a8b16d4b0e53","permalink":"https://itwoi.github.io/publication/gao-2021-deep/","publishdate":"2021-04-15T02:57:47.564515Z","relpermalink":"/publication/gao-2021-deep/","section":"publication","summary":"","tags":[],"title":"Deep Learning-Based Hybrid Fuzz Testing","type":"publication"},{"authors":["Fengjuan Gao","Yu Wang","Jinguo Zhou","Anzi Xu","Linzhang Wang","Rongxin Wu","Charles Zhang","Zhendong Su"],"categories":[],"content":"","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1641783409,"objectID":"002815185305204f7601422e4e753cc4","permalink":"https://itwoi.github.io/publication/gao-2021-high/","publishdate":"2022-01-15T03:55:37.411345Z","relpermalink":"/publication/gao-2021-high/","section":"publication","summary":"","tags":[],"title":"High-precision Data Race Detection Method for Large Scale Programs","type":"publication"},{"authors":["Fengjuan Gao","Yu Wang","Tianjiao Chen","Lingyun Situ","Linzhang Wang","Xuandong Li"],"categories":[],"content":"","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1642218071,"objectID":"e217d31520b5e4f10754a1a56171a665","permalink":"https://itwoi.github.io/publication/gao-2021-static/","publishdate":"2022-01-10T03:41:11.629966Z","relpermalink":"/publication/gao-2021-static/","section":"publication","summary":"","tags":[],"title":"Static Checking of Array Index Out-of-Bounds Defects in C Programs Based on Taint Analysis","type":"publication"},{"authors":["Yu Wang","Ke Wang","Fengjuan Gao","Linzhang Wang"],"categories":[],"content":"","date":1605744000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1642235789,"objectID":"6ed6108189cb41f4caf84fb944575660","permalink":"https://itwoi.github.io/publication/wang-2020-learning/","publishdate":"2020-11-19T08:36:29.719586Z","relpermalink":"/publication/wang-2020-learning/","section":"publication","summary":"in Proceedings of the ACM SIGPLAN Conference on Object-Oriented Programming Systems, Languages, and Applications 2020 (OOPSLA 20) Distinguished Paper award","tags":[],"title":"Learning semantic program embeddings with graph interval neural network","type":"publication"},{"authors":["Fengjuan Gao","Yu Wang","Linzhang Wang","Zijiang Yang","Xuandong Li"],"categories":[],"content":"","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1642168812,"objectID":"337d64f9aeefd4b5165626a3974b2156","permalink":"https://itwoi.github.io/publication/gao-2020-automatic/","publishdate":"2020-01-14T14:00:12.311727Z","relpermalink":"/publication/gao-2020-automatic/","section":"publication","summary":"in Journal of Computer Science and Technology (JCST)","tags":[],"title":"Automatic Buffer Overflow Warning Validation","type":"publication"},{"authors":[" 王豫"," 高凤娟"," 马可欣"," 司徒凌云"," 王林章"," 陈碧欢"," 刘杨"," 赵建华"," 李宣东"],"categories":[],"content":"","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1642129230,"objectID":"4c5e11db712117866cfe6c13b64492cf","permalink":"https://itwoi.github.io/publication/wang-2020-detecting/","publishdate":"2022-01-10T03:00:29.952856Z","relpermalink":"/publication/wang-2020-detecting/","section":"publication","summary":"","tags":[],"title":"垂悬指针检测与防御方法","type":"publication"},{"authors":["Yu Wang","Fengjuan Gao","Lingyun Situ","Lingzhang Wang","Bihuan Chen","Yang Liu","Jianhua Zhao","Xuandong Li"],"categories":[],"content":"","date":1514764800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1639836006,"objectID":"28a87ca806ee0b218d8f8e83d07d7513","permalink":"https://itwoi.github.io/publication/wang-2018-dangdone/","publishdate":"2021-12-18T14:00:05.852315Z","relpermalink":"/publication/wang-2018-dangdone/","section":"publication","summary":"in Proceedings of the Tenth Asia-Pacific Symposium on Internetware (Internetware)","tags":[],"title":"Dangdone: Eliminating dangling pointers via intermediate pointers","type":"publication"},{"authors":["Yu Wang","Linzhang Wang","Tingting Yu","Jianhua Zhao","Xuandong Li"],"categories":[],"content":"","date":1483228800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1642149389,"objectID":"f8ec5f2180e684f3f9193d66d24a6b78","permalink":"https://itwoi.github.io/publication/dblp-confissta-wang-wyzl-17/","publishdate":"2022-01-14T08:36:29.263486Z","relpermalink":"/publication/dblp-confissta-wang-wyzl-17/","section":"publication","summary":"in Proceedings of the 26th ACM SIGSOFT International Symposium on Software Testing and Analysis(ISSTA 17)","tags":[],"title":"Automatic detection and validation of race conditions in interrupt-driven embedded software","type":"publication"},{"authors":null,"categories":null,"content":"Boolean satisfiability (SAT) is one of the most well-known NP-complete problems and has been extensively studied. State-of-the-art solvers exist and have found a wide range of applications. However, they still do not scale well to formulas with hundreds of variables for uniform 3-SAT problems. To tackle this scalability challenge, we introduce CNNSAT, a fast and accurate statistical decision procedure for SAT based on convolutional neural networks. CNNSAT’s effectiveness is due to a precise and compact representation of Boolean formulas. On both real and synthetic formulas, CNNSAT is highly accurate and orders of magnitude faster than the state-of-the-art solvers in predicting satisfiability.\nWe also extend CNNSAT to predict the satisfiability of constraints in symbolic execution, which accelerates the constraint solving in symbolic execution, because most unsatisfiable constraints are skipped.\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"95e49459dbf37e71702d80960ff7adf3","permalink":"https://itwoi.github.io/project/dlsat/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/dlsat/","section":"project","summary":"An extensible work to \"CNNSAT: Fast, Accurate Boolean Satisfiability using Convolutional Neural Networks\".","tags":["Bug Detection","Deep Learning"],"title":"Accerlating Constraint Solving in Symbolic Execution by CNN","type":"project"},{"authors":null,"categories":null,"content":"Interrupt-driven programs are widely deployed in safety-critical embedded systems to perform hardware and resource dependent data operation tasks. The frequent uses of interrupts in these systems can cause data races due to interactions between application tasks and interrupt handlers.\nWe develop an automated framework that helps in detecting and fixing data races in interrupt-driven embedded software. It uses a combination of static analysis, symbolic execution and dynamic simulation to synthesize the failure-inducing data input and interrupt interleaving schedule.\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"4e0c131bdd0134bafc029836c6bee9d3","permalink":"https://itwoi.github.io/project/ytt/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/ytt/","section":"project","summary":"Detecting Race in Interrupt-driven Programs by Static Analysis, Symbolic Execution and Dynamic Validation.","tags":["Bug Detection"],"title":"Data Race Detection in Interrupt-driven Programs","type":"project"},{"authors":null,"categories":null,"content":"Learning distributed representations of source code has been a challenging task for machine learning models. Of late, Graph Neural Network (GNN) was proposed to learn embeddings of programs from their graph representations. However, GNN can suffer from precision issues, especially when dealing with programs rendered into large graphs.\nWe present a new graph neural architecture, called Graph Interval Neural Network (GINN), to tackle the weaknesses of the existing GNN. Unlike the standard GNN, GINN focuses exclusively on intervals (generally manifested in looping construct) for mining the feature representation of a program, furthermore, GINN operates on a hierarchy of intervals for scaling the learning to large graphs.\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"2842d2c5607fd9a33b61f3b5628de27b","permalink":"https://itwoi.github.io/project/ginn/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/ginn/","section":"project","summary":"Learning Semantic Program Embeddings via Graph Interval Neural Network.","tags":["Deep Learning","Bug Detection"],"title":"Learning Semantic Program Embeddings","type":"project"},{"authors":null,"categories":null,"content":"Existing runtime protection methods that prevent attacks based on dangling pointer incur high runtime overhead and memory overhead.\nWe design a lightweight approach to eliminate dangling pointers during the compilation time. We first develop a static dangling pointer checker based on Clang to detect potential dangling pointers if the pointers are deallocated but not nullified. Then, we transform the potential dangling pointers so that all aliases of a pointer point to the same intermediate pointer. When all aliases point to the same pointer, all dangling pointers are eliminated if the intermediate pointer points to null.\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"99569e9850d6fe1a911ffe5e544274af","permalink":"https://itwoi.github.io/project/dangdone/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/dangdone/","section":"project","summary":"We design a lightweight approach to eliminate dangling pointers during the compilation time.","tags":["Bug Detection"],"title":"Preventing Dangling Pointers with Intermediate Pointers","type":"project"},{"authors":null,"categories":null,"content":"Despite significant progress in recent years, the important problem of practical static race detection remains open. Previous static techniques either suffer from a high false positive rate due to the compromise of precision, or scalability issues caused by a highly precise analysis.\nIn this work, we present a staged approach to resolve this paradox. It first performs a lightweight context-sensitive data access analysis, based on the value flow of a program, to identify the candidate data race subpaths instead of the whole program paths. Second, we employ May-Happen-in-Parallel (MHP) analysis to identify whether two data accesses in a program may execute concurrently. This stage is scalable, due to the design of the thread flow graph (TFG), that encodes thread information to query MHP relationship of the subpaths. Finally, for each subpath whose two data accesses are MHP, we apply heavyweight path-sensitive analysis to verify the feasibility of the data races.\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"2e6b733d0e166a4fd2523f07fe45c314","permalink":"https://itwoi.github.io/project/guard/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/guard/","section":"project","summary":"A data race detection method that is built upon value flow analysis.","tags":["Bug Detection"],"title":"Scalable, Context-Sensitive, Guarded Data Race Detection","type":"project"},{"authors":["Yu Wang","Junjing Shi","Linzhang Wang","Jianhua Zhao","Xuandong Li"],"categories":[],"content":"","date":1420070400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1639836009,"objectID":"ae1902c9cdd97a205ddb3ed0fa250482","permalink":"https://itwoi.github.io/publication/wang-2015-detecting/","publishdate":"2022-01-15T14:00:09.246162Z","relpermalink":"/publication/wang-2015-detecting/","section":"publication","summary":"in Proceedings of the 7th Asia-Pacific Symposium on Internetware (Internetware)","tags":[],"title":"Detecting data races in interrupt-driven programs based on static analysis and dynamic simulation","type":"publication"}]